alias pcb R7;
pcb=PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16;

alias userSP R4;
userSP=SP;

[pcb+13]=SP;
SP=[pcb+11]*512-1;

alias ret_val R0;
alias syscall R1;
alias arg1 R2;
alias arg2 R3;

syscall=[[PTBR+2*(userSP-5)/512]*512+((userSP-5)%512)];
arg1=[[PTBR+2*(userSP-4)/512]*512+((userSP-4)%512)];
arg2=[[PTBR+2*(userSP-3)/512]*512+((userSP-3)%512)];
ret_val=[PTBR+2*(userSP-1)/512]*512+((userSP-1)%512);

[pcb+9]=syscall;

//NEWUSR
if (syscall==22) then
	//arg1= uname, arg2= passwd
	if ([SYSTEM_STATUS_TABLE]!=1 || [SYSTEM_STATUS_TABLE+1]!=2) then
		[ret_val]=-2;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;
	
	R5=0;
	while (R5<MAX_USER_NUM) do		
		if (arg1==[USER_TABLE+R5*2]) then
			break;
		endif;
		R5=R5+1;
	endwhile;
		
	if (R5!=MAX_USER_NUM) then
		[ret_val]=-1;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;	
	
	R5=0;
	while (R5<MAX_USER_NUM) do		
		if ([USER_TABLE+R5*2]==-1) then
			break;
		endif;
		R5=R5+1;
	endwhile;
	
	if (R5==MAX_USER_NUM) then
		[ret_val]=-3;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;	

	encrypt arg2;
	
	[USER_TABLE+R5*2]=arg1;
	[USER_TABLE+R5*2+1]=arg2;

	[ret_val]=0;
endif;

//REMUSR
if (syscall==23) then
	//arg1= uname

	if ([SYSTEM_STATUS_TABLE]!=1 || [SYSTEM_STATUS_TABLE+1]!=2) then
		[ret_val]=-2;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;
	
	if (arg1=="root" || arg1=="kernel") then
		[ret_val]=-2;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;

	R5=0;
	while (R5<MAX_USER_NUM) do		
		if (arg1==[USER_TABLE+R5*2]) then
			break;
		endif;
		R5=R5+1;
	endwhile;
		
	if (R5==MAX_USER_NUM) then
		[ret_val]=-1;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;	
	
	R6=0;
	while (R6<60) do
		if ([ROOT_FILE+R6*8+3]==arg1) then
			break;
		endif;
		R6=R6+1;
	endwhile;

	if (R6!=60) then
		[ret_val]=-3;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;	

	[USER_TABLE+R5*2]=-1;
	[USER_TABLE+R5*2+1]=-1;
	
	[ret_val]=0;
	
endif;	

//SETPWD
if (syscall==24) then
	//arg1=uname, arg2=passwd

	if ([SYSTEM_STATUS_TABLE+1]!=2) then
		[ret_val]=-1;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;
	
	R5=0;
	while (R5<MAX_USER_NUM) do		
		if (arg1==[USER_TABLE+R5*2]) then
			break;
		endif;
		R5=R5+1;
	endwhile;
	
	if (R5==MAX_USER_NUM) then
		[ret_val]=-2;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;	

	if ([pcb+3]!=R5) then
		if ([SYSTEM_STATUS_TABLE]!=1) then
			[ret_val]=-1;
			SP=[pcb+13];
			[pcb+9]=0;
			ireturn;
		endif;		
	endif;
	
	encrypt arg2;
	
	[USER_TABLE+R5*2+1]=arg2;
	
	[ret_val]=0;
endif;

//GETUNAME
if (syscall==25) then
	//arg1=uid
	if (arg1<0 || arg1>15) then
		[ret_val]=-1;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;
	
	if ([USER_TABLE+arg1*2]==-1) then
		[ret_val]=-1;
		SP=[pcb+13];
		[pcb+9]=0;
		ireturn;
	endif;
	
	[ret_val]=[USER_TABLE+arg1*2];
endif;	


//GETUID
if (syscall==26) then
	//arg1=uname
	R5=0;
	while (R5<16) do
		if ([USER_TABLE+2*R5]==arg1) then
			[ret_val]=R5;
			SP=[pcb+13];
			[pcb+9]=0;
			ireturn;
		endif;
		R5=R5+1;
	endwhile;

	[ret_val]=-1;
endif;
	

SP=[pcb+13];
[pcb+9]=0;
ireturn;
