alias sysnum R1;
alias arg1 R2;

alias userSP R3;
userSP=SP;

sysnum=[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((userSP-5)/512)]*512+(userSP-5)%512];

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;//check -1??

//WAIT SYS CALL
if (sysnum==13) then 
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=sysnum;
	arg1=[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((userSP-4)/512)]*512+(userSP-4)%512];
	if ([SYSTEM_STATUS_TABLE+1]==arg1 || [PROCESS_TABLE+arg1*16+4]==TERMINATED || (arg1>=16) || (arg1<0)) then
		[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((userSP-1)/512)]*512+(userSP-1)%512]=-1; 
		SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
		ireturn;
	endif;
	
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_PROCESS;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+5]=arg1;
	
	multipush(R1,R2,R3);
	call SCHEDULER;
	multipop(R1,R2,R3);

	[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((userSP-1)/512)]*512+(userSP-1)%512]=0;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
	ireturn;
endif;

//SIGNAL SYS CALL
if (sysnum==14) then
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=sysnum;

	R5=0;
	while (R5<16) do
		if ([PROCESS_TABLE+R5*16+4]==WAIT_PROCESS && [PROCESS_TABLE+R5*16+5]==[SYSTEM_STATUS_TABLE+1]) then
			[PROCESS_TABLE+R5*16+4]=READY;
			[PROCESS_TABLE+R5*16+5]=-1;
		endif;
		R5=R5+1;
	endwhile;

	[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((userSP-1)/512)]*512+(userSP-1)%512]=0;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
	ireturn;
endif;

//GETPID SYS CALL
if (sysnum==11) then
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=sysnum;

	[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((userSP-1)/512)]*512+(userSP-1)%512]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+1];
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
	ireturn;
endif;

//GETPPID SYS CALL
if (sysnum==12) then
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=sysnum;

	[[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*((userSP-1)/512)]*512+(userSP-1)%512]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+2];
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
	ireturn;
endif;

